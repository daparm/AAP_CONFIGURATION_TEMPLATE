---
- name: Deploy Ansible Automation Platform
  hosts: "{{ env | default('test') }}" # noqa: syntax-check
  connection: local
  vars_files:
    - "../vaults/{{ env }}.yml"
  tasks:
    # - name: Include aap_setup_download role
    #   ansible.builtin.include_role:
    #     name: infra.aap_utilities.aap_setup_download

    - name: Include aap_setup_prepare role
      ansible.builtin.include_role:
        name: infra.aap_utilities.aap_setup_prepare

    - name: Fix Preflight regarding os distro if Fedora running
      ansible.builtin.lineinfile:
        path: "{{ aap_setup_prep_installer_dir }}/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/nodes.yml"
        state: present
        regexp: "      - ansible_distribution == 'RedHat'"
        line: "      - ansible_distribution == 'Fedora'"
    #   # when: ansible_facts['os_family'] == "Fedora"

    - name: Fix Preflight regarding version check if Fedora running
      ansible.builtin.lineinfile:
        path: "{{ aap_setup_prep_installer_dir }}/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/nodes.yml"
        state: absent
        regexp: "ansible_distribution_version"
      # when: ansible_facts['os_family'] == "Fedora"

    - name: Ensure AAP_License File is in place
      ansible.builtin.copy:
        src: /home/smn/Projects/AAP/AAP_License.zip
        dest: "{{ controller_license_file }}"
      delegate_to: localhost

    - name: Include aap_setup_install role
      ansible.builtin.include_role:
        name: infra.aap_utilities.aap_setup_install

- name: Configure ansible controller post installation
  hosts: "{{ env | default('test') }}" # noqa: syntax-check
  vars_files:
    - "../vaults/{{ env }}.yml"
  connection: local
  tasks:

    - name: Figuring out AH token
      when: ah_token is not defined or ah_token['token'] is defined
      block:
        - name: Authenticate and get an API token from Automation Hub
          infra.ah_configuration.ah_token:
            aap_hostname: "{{ aap_hostname | default(groups['automationhub'][0]) }}"
            aap_username: "{{ ah_token_username | default('admin') }}"
            aap_password: "{{ ah_token_password }}"
            ah_path_prefix: galaxy # this is for private automation hub
            validate_certs: false
          register: r_ah_token

        - name: Fixing format
          ansible.builtin.set_fact:
            ah_token: "{{ ah_token['token'] }}"
          when: r_ah_token['changed'] # noqa: no-handler

    - name: Call dispatch role
      ansible.builtin.include_role:
        name: infra.aap_configuration.dispatch



    # - name: Launch build execution environment job template
    #   awx.awx.job_launch:
    #     name: build_execution_environments
    #     controller_host:     "{{ aap_hostname }}"
    #     aap_username: "{{ aap_username }}"
    #     aap_password: "{{ aap_password }}"
    #     validate_certs:      "{{ aap_validate_certs }}"

...
